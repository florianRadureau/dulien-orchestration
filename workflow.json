{
  "epics": {
    "5": {
      "analysis": "Cette épic nécessite l'implémentation d'un intercepteur HTTP côté webapp pour capturer les erreurs 401, gérer le rafraîchissement automatique des tokens Azure AD, et rediriger vers la page de connexion en cas d'échec. Le système doit nettoyer le stockage local, afficher une notification claire à l'utilisateur et assurer une expérience fluide lors de la reconnexion.",
      "workflow": [
        {
          "task_id": "webapp-41",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "webapp-41",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "webapp-41",
          "depends_on": [
            "webapp-41",
            "webapp-41"
          ],
          "priority": 2
        },
        {
          "task_id": "webapp-41",
          "depends_on": [
            "webapp-41"
          ],
          "priority": 2
        },
        {
          "task_id": "webapp-41",
          "depends_on": [
            "webapp-41",
            "webapp-41",
            "webapp-41",
            "webapp-41"
          ],
          "priority": 3
        }
      ],
      "tasks_created": [
        {
          "repo": "webapp",
          "issue_number": 41,
          "title": "Créer AuthInterceptor pour gérer les erreurs 401 et le refresh token Azure AD",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 42,
          "title": "Implémenter TokenRefreshService pour la gestion du refresh token avec Azure AD",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 43,
          "title": "Ajouter notification toast et redirection vers login sur expiration de session",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 44,
          "title": "Nettoyer le localStorage des tokens expirés avant redirection",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 45,
          "title": "Ajouter tests unitaires pour AuthInterceptor et TokenRefreshService",
          "agent": "webapp"
        }
      ]
    },
    "1": {
      "analysis": "Ajout de placeholders (empty states) cohérents sur la page /home pour 4 sections : mentors recommandés, prochains rendez-vous, fil d'actualités et articles. Réutilisation du pattern de placeholder existant des formations recommandées pour garantir une cohérence visuelle et UX.",
      "workflow": [
        {
          "task_id": "webapp-46",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "webapp-46",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "webapp-46",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "webapp-46",
          "depends_on": [],
          "priority": 1
        }
      ],
      "tasks_created": [
        {
          "repo": "webapp",
          "issue_number": 46,
          "title": "Ajouter placeholder empty state dans section mentors recommandés sur /home",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 47,
          "title": "Ajouter placeholder empty state dans section prochains rendez-vous sur /home",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 48,
          "title": "Ajouter placeholder empty state dans section fil d'actualités sur /home",
          "agent": "webapp"
        },
        {
          "repo": "webapp",
          "issue_number": 49,
          "title": "Ajouter placeholder empty state dans section articles sur /home",
          "agent": "webapp"
        }
      ]
    },
    "6": {
      "analysis": "Automatisation de la mise à jour du MCP métiers via GitHub Actions. Création d'un workflow CI/CD qui s'exécute après chaque merge sur master, analyse les changements de code, extrait les informations métier pertinentes et crée automatiquement une PR sur le repository du MCP avec les mises à jour nécessaires.",
      "workflow": [
        {
          "task_id": "infrastructure-10",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "infrastructure-10",
          "depends_on": [],
          "priority": 1
        },
        {
          "task_id": "infrastructure-10",
          "depends_on": [
            "infrastructure-10",
            "infrastructure-10"
          ],
          "priority": 2
        },
        {
          "task_id": "infrastructure-10",
          "depends_on": [],
          "priority": 1
        }
      ],
      "tasks_created": [
        {
          "repo": "infrastructure",
          "issue_number": 10,
          "title": "Créer workflow GitHub Actions pour extraction automatique des changements métiers",
          "agent": "infrastructure"
        },
        {
          "repo": "infrastructure",
          "issue_number": 11,
          "title": "Implémenter script d'analyse du code pour extraction des patterns métiers",
          "agent": "infrastructure"
        },
        {
          "repo": "infrastructure",
          "issue_number": 12,
          "title": "Créer script de génération automatique de PR vers le repo MCP",
          "agent": "infrastructure"
        },
        {
          "repo": "infrastructure",
          "issue_number": 13,
          "title": "Configurer les secrets GitHub et permissions pour l'automatisation cross-repo",
          "agent": "infrastructure"
        }
      ]
    }
  }
}
